var e=Object.defineProperty,t=Object.defineProperties,a=Object.getOwnPropertyDescriptors,n=Object.getOwnPropertySymbols,s=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable,o=(t,a,n)=>a in t?e(t,a,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[a]=n,i=(e,t)=>{for(var a in t||(t={}))s.call(t,a)&&o(e,a,t[a]);if(n)for(var a of n(t))r.call(t,a)&&o(e,a,t[a]);return e};import{a4 as u,a5 as c,a6 as d,a7 as l,a8 as y,a9 as p,aa as h,ab as f,ac as m,ad as w,ae as b,af as g,ag as S,ah as v,ai as E,aj as P,ak as O,C as j}from"./vendor-c0074b30.js";var I={apiKey:"AIzaSyAJv0aTJMCbG_e6FJZzc6hSzri9qDCmvoo",authDomain:"rally-web-spike.firebaseapp.com",projectId:"rally-web-spike",storageBucket:"rally-web-spike.appspot.com",messagingSenderId:"85993993890",appId:"1:85993993890:web:b975ff99733d2d8b50c9fb"};let k,A,C,W,z,D=!1;async function T(){const e=(t=I,a=({auth:e})=>{l(e,(e=>{q.forEach((t=>t(e)))}))},D||(D=!0,k=u(t),A=c(k),C=d(k),a&&a({app:k,auth:A,db:C})),{app:k,auth:A,db:C});var t,a;W=e.auth,z=e.db}let _,G,J={user:void 0,userStudies:void 0,onboarded:!1};function $(e){_=g(z,"users",e),G=e}function x(e,t=!0){return b(_,e,{merge:t})}async function N(){return(await v(E(z,"studies"))).docs.map((e=>e.data()))}const R=[],q=[];function B(e){J=O(J,e),R.forEach((e=>e(J)))}async function F(e){P(g(z,"users",e.uid),(e=>{const t=e.data();B((e=>{e.user=t}))}))}async function K(e){const t=E(z,"users",e.uid,"studies");P(t,(e=>{const t={};e.forEach((e=>{const a=e.data();t[a.studyId]=a})),B((e=>{e.userStudies=t}))}))}var M={async initialize(e=!0){if(!e)return;T();const t={};let a;const n=await new Promise((e=>{l(W,(t=>{e(t)}))}));null!==n&&($(n.uid),a=await y(_),a=a.data(),F(n),K(n),this.notifyStudies(n));let s=await N();return P(E(z,"studies"),(e=>{const t=[];e.forEach((function(e){t.push(e.data())})),B((e=>{e.studies=t}))})),t._initialized=!0,a&&(t.user=a),s&&(t.studies=s),t},async onAuthStateChanged(e){T(),l(W,e)},async loginWithGoogle(){const e=new p;let t;e.setCustomParameters({prompt:"select_account"});try{t=await h(W,e)}catch(a){console.error("there was an error",a)}$(t.user.uid),F(t.user),K(t.user),this.notifyStudies(t.user)},async loginWithEmailAndPassword(e,t){let a;try{a=await f(W,e,t)}catch(n){return void console.error("there was an error",n)}a.user.emailVerified?($(a.user.uid),F(a.user),K(a.user),this.notifyStudies(a.user)):(console.warn("Email account not verified, sending verification email"),await m(a.user))},async signupWithEmailAndPassword(e,t){let a;try{a=await w(W,e,t)}catch(n){return void console.error("there was an error",n)}console.info("Sending verification email"),await m(a.user)},async notifyStudies(e){for(const t of await N()){let a="https://us-central1-rally-web-spike.cloudfunctions.net";const n=await e.getIdToken(),s=JSON.stringify({studyId:t.studyId,idToken:n}),r=await fetch(`${a}/rallytoken`,{method:"POST",headers:{"Content-Type":"application/json"},body:s}),o=(await r.json()).rallyToken;window.dispatchEvent(new CustomEvent("complete-signup",{detail:{studyId:t.studyId,rallyToken:o}}))}},updateOnboardedStatus:async e=>x({onboarded:e}),async updateStudyEnrollment(e,t){const a=i({},J.userStudies||{});return e in a||(a[e]={}),a[e]=i({},a[e]),a[e].enrolled=t,a[e].studyId=e,t&&(a[e].joinedOn=new Date),await async function(e,t,a=!0){const n=g(z,"users",G,"studies",e);await S(n,t,{merge:a})}(e,a[e]),!0},updatePlatformEnrollment:async e=>x({enrolled:e}),updateDemographicSurvey:async e=>x({demographicsData:e}),onAuthChange(e){q.push(e)},onNextState(e){R.push(e)}};const V=function(){const{subscribe:e,set:t}=j(void 0);return M.onAuthStateChanged((e=>{t(null!==e)})),{subscribe:e}}(),Z=function(e=M){const n=j({_initialized:!1}),{subscribe:s,set:r}=n;return e.initialize(true).then((e=>{r(e)})),e.onNextState((e=>{const n=(s=i({},e),t(s,a({_initialized:!0})));var s;r(n)})),{subscribe:s,set:r,loginWithGoogle:async()=>e.loginWithGoogle(),loginWithEmailAndPassword:async(t,a)=>e.loginWithEmailAndPassword(t,a),signupWithEmailAndPassword:async(t,a)=>e.signupWithEmailAndPassword(t,a),updateOnboardedStatus:async t=>e.updateOnboardedStatus(t),async updateStudyEnrollment(t,a){const n=!!a;console.debug(`Rally - changing study ${t} enrollment to ${n}`);try{return await e.updateStudyEnrollment(t,n)}catch(s){console.error(s)}},async updatePlatformEnrollment(t){const a=!!t;console.debug(`Rally - changing enrollment to ${a}`);try{return await e.updatePlatformEnrollment(a)}catch(n){console.error(n)}},async updateDemographicSurvey(t){try{await e.updateDemographicSurvey(t)}catch(a){console.error("Rally - failed to update the demographic survey",a)}}}}();export{V as i,Z as s};
