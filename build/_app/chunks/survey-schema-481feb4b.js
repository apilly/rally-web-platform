var e=Object.defineProperty,t=Object.getOwnPropertySymbols,a=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable,i=(t,a,r)=>a in t?e(t,a,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[a]=r;function s(e,t){return Object.values(e).reduce(((e,a)=>{let r,i;switch(a.type){case"single":r=void 0;break;case"multi":r=[];break;case"text":r=""}return i=t&&void 0!==t[a.key]?t[a.key]:r,e[a.key]=i,e}),{})}function n(e,t){if(void 0===e)return!1;if("text"===t)return e.length>0;if("single"===t)return void 0!==e;if("multi"===t)return e.length>0;throw Error("unknown question type")}function o(e){switch(e){case"text":return"";case"single":return;case"multi":return[];default:throw Error("question must have a type")}}function l(e,t){function a(e){e.target.value=t.edit(e.target.value)}function r(e){e.target.value=t.edit(e.target.value)}function i(e){e.target.value=t.display(e.target.value)}return t&&(e.addEventListener("input",a),e.addEventListener("focus",r),e.addEventListener("blur",i),t.alignRight&&e.classList.add("right")),{destroy(){t&&(e.classList.remove("right"),e.removeEventListener("input",a),e.removeEventListener("focus",r),e.removeEventListener("blur",i))}}}class h{constructor(e={}){this.alignRight=!!e.alignRight||!1,this.showValidationErrors=!1}setValidator(e){this.isInvalid=e}formatForEditing(e){this.edit=t=>(this.showValidationErrors=!1,e(t))}formatForDisplay(e){this.display=t=>(this.showValidationErrors=!0,e(t))}formatForResponse(e){this.response=e}}const c={currency:function(){const e=e=>{if(void 0===e)return"";const t=/^\d/;return e.split("").filter((e=>t.test(e))).join("")},t=new h({alignRight:!0});return t.formatForDisplay((t=>{let a=t;if("string"==typeof a&&a.includes("_"))return"";"number"==typeof a?a=Math.floor(a).toString():"string"!=typeof a&&(a="");const r=new Intl.NumberFormat("en-US",{style:"currency",currency:"USD",maximumFractionDigits:0}),i=e(a);return i.length?r.format(i):""})),t.formatForEditing(e),t.formatForResponse((t=>t.length?+e(t):void 0)),t},zipcode:function(){const e=e=>{if(void 0===e)return"";const t=/^\d/;return e.split("").filter((e=>t.test(e))).join("").slice(0,5)},t=new h({alignRight:!1});return t.formatForDisplay(e),t.formatForEditing(e),t.formatForResponse(e),t.setValidator((e=>{if(void 0===e)return!1;const t=Number(e);return(e.length>0&&e.length<5||!!Number.isNaN(t))&&"zipcode must be a five-digit number"})),t}};function u(e,t,a,r,i=!1){const s={};return Object.keys(e).forEach((o=>{const l=t[o];i&&!n(l,e[o].type)||("text"===e[o].type?a.has(o,r)?s[o]=a[o][r](l):s[o]=l:"multi"===e[o].type?s[o]=l?[...l]:[]:"single"===e[o].type&&(s[o]=l))})),s}function y(e,t,a){return u(e,t,a,"response",!0)}function d(e,t,a){return u(e,t,a,"display")}const p={age:{key:"age",label:"1. What is your age?",type:"single",columns:!0,values:[{key:"19_24",label:"19-24 years old"},{key:"25_34",label:"25-34 years old"},{key:"35_44",label:"35-44 years old"},{key:"45_54",label:"45-54 years old"},{key:"55_64",label:"55-64 years old"},{key:"over_65",label:"65 years and older"}]},gender:{key:"gender",label:"2. What is your gender?",type:"single",columns:!0,values:[{key:"male",label:"Male"},{key:"female",label:"Female"},{key:"neither",label:"Neither choice describes me"},{key:"decline",label:"Decline to identify"}]},hispanicLatinxSpanishOrigin:{key:"hispanicLatinxSpanishOrigin",label:"3. Are you of Hispanic, Latinx, or Spanish origin?",type:"single",values:[{key:"other",label:"No, not of Hispanic, Latinx, or Spanish origin"},{key:"hispanicLatinxSpanish",label:"Yes"}]},race:{key:"race",label:"4. What is your race / ethnicity?",type:"multi",columns:!0,values:[{key:"american_indian_or_alaska_native",label:"American Indian or Alaska Native"},{key:"asian_indian",label:"Asian Indian"},{key:"black_or_african_american",label:"Black or African American"},{key:"chamorro",label:"Chamorro"},{key:"chinese",label:"Chinese"},{key:"filipino",label:"Filipino"},{key:"japanese",label:"Japanese"},{key:"korean",label:"Korean"},{key:"native_hawaiian",label:"Native Hawaiian"},{key:"samoan",label:"Samoan"},{key:"vietnamese",label:"Vietnamese"},{key:"white",label:"White"},{key:"other_asian",label:"Other Asian"},{key:"other_pacific_islander",label:"Other Pacific Islander"},{key:"some_other_race",label:"Some other race"}]},school:{key:"school",label:"5. What is the highest level of school you have completed?",type:"single",values:[{key:"less_than_high_school",label:"Less than high school"},{key:"some_high_school",label:"Some high school"},{key:"high_school_graduate_or_equivalent",label:"High school graduate or equivalent (for example GED)"},{key:"some_college_but_no_degree_or_in_progress",label:"Some college, but degree not received or in progress"},{key:"associates_degree",label:"Associate's degree (for example AA, AS)"},{key:"bachelors_degree",label:"Bachelor's degree (for example BA, BS, BB)"},{key:"graduate_degree",label:"Graduate degree (for example master's, professional, doctorate)"}]},exactIncome:{key:"exactIncome",label:"6. What is your household's combined annual income during the past 12 months?",sublabel:"Please provide an approximate estimate in US Dollars:",type:"text",formatter:"currency"},zipcode:{key:"zipcode",label:"7. What is your zip code?",type:"text",formatter:"zipcode"}},g=(b=p,((e,s)=>{for(var n in s||(s={}))a.call(s,n)&&i(e,n,s[n]);if(t)for(var n of t(s))r.call(s,n)&&i(e,n,s[n]);return e})({validateAllQuestions(e,t){return Object.keys(e).every((e=>!this.hasValidator(e)||this.hasValidator(e)&&!this[e].isInvalid(t[e])))},exists(e){return e in this},has(e,t){return this.exists(e)&&t in this[e]},hasValidator(e){return this.has(e,"isInvalid")},showErrors(e){return this[e].showValidationErrors},hasInput(e){return this.has(e,"edit")},hasBlur(e){return this.has(e,"display")},hasFocus(e){return this.has(e,"edit")},hasDisplay(e){return this.has(e,"display")},hasEdit(e){return this.has(e,"edit")},hasResponse(e){return this.has(e,"response")}},Object.keys(b).reduce(((e,t)=>{const a=b[t].formatter;return a&&(a in c?e[t]=c[a]():console.error(`error: formatter ${a} is not valid`)),e}),{})));var b;export{y as a,o as b,s as c,l as d,d as f,g as i,n as q,p as s};
